// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MSB_Database))]
    [Migration("20240315142100_newmig")]
    partial class newmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Address.AddressModel", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserModelId")
                        .HasColumnType("char(36)");

                    b.HasKey("AddressId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Domain.Models.UserModel.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a8c2463-e081-4376-89f5-d4a8db126d28"),
                            Email = "Adam@gmail.com",
                            FirstName = "Adam",
                            LastName = "Andersson",
                            Password = "Adam123"
                        },
                        new
                        {
                            Id = new Guid("6d9725b0-c0aa-4516-8b48-71f1593f9ea5"),
                            Email = "Bertil@gmail.com",
                            FirstName = "Bertil",
                            LastName = "Bengtsson",
                            Password = "Bertil123"
                        },
                        new
                        {
                            Id = new Guid("cf23f353-f70a-4ed7-ad56-b710400bf2b4"),
                            Email = "Cecar@gmail.com",
                            FirstName = "Cecar",
                            LastName = "Citron",
                            Password = "Cecar123"
                        },
                        new
                        {
                            Id = new Guid("1ece0c28-f70f-4305-99f7-262160a259d9"),
                            Email = "Erik@gmail.com",
                            FirstName = "Erik",
                            LastName = "Eriksson",
                            Password = "Erik123"
                        },
                        new
                        {
                            Id = new Guid("9d745b7e-5394-47d2-81e5-88ef43f08201"),
                            Email = "Fredrik@gmail.com",
                            FirstName = "Fredrik",
                            LastName = "Fredriksson",
                            Password = "Fredrik123"
                        });
                });

            modelBuilder.Entity("Domain.Models.Address.AddressModel", b =>
                {
                    b.HasOne("Domain.Models.UserModel.UserModel", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Domain.Models.UserModel.UserModel", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
