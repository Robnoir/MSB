// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MSB_Database))]
    [Migration("20240318112000_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Address.AddressModel", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserModelUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("AddressId");

                    b.HasIndex("UserModelUserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Domain.Models.UserModel.UserModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6aa635db-bf8f-4644-a90e-63b8f54d694d"),
                            Email = "Adam@gmail.com",
                            FirstName = "Adam",
                            LastName = "Andersson",
                            PasswordHash = "Adam123"
                        },
                        new
                        {
                            UserId = new Guid("77d804dd-ad72-4686-a50c-229183822b17"),
                            Email = "Bertil@gmail.com",
                            FirstName = "Bertil",
                            LastName = "Bengtsson",
                            PasswordHash = "Bertil123"
                        },
                        new
                        {
                            UserId = new Guid("3e003862-2c60-41e9-b617-7d998313ddf3"),
                            Email = "Cecar@gmail.com",
                            FirstName = "Cecar",
                            LastName = "Citron",
                            PasswordHash = "Cecar123"
                        },
                        new
                        {
                            UserId = new Guid("50938770-583b-4f8b-9691-85e138a3bb4b"),
                            Email = "Erik@gmail.com",
                            FirstName = "Erik",
                            LastName = "Eriksson",
                            PasswordHash = "Erik123"
                        },
                        new
                        {
                            UserId = new Guid("0df31c15-1143-48f0-9b49-568f2ca5e5eb"),
                            Email = "Fredrik@gmail.com",
                            FirstName = "Fredrik",
                            LastName = "Fredriksson",
                            PasswordHash = "Fredrik123"
                        },
                        new
                        {
                            UserId = new Guid("b0af51ca-473d-4d6c-8348-c2334e5c0cf7"),
                            Email = "Gustav@gmail.com",
                            FirstName = "Gustav",
                            LastName = "Gustavsson",
                            PasswordHash = "Gustav123"
                        });
                });

            modelBuilder.Entity("Domain.Models.Address.AddressModel", b =>
                {
                    b.HasOne("Domain.Models.UserModel.UserModel", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserModelUserId");
                });

            modelBuilder.Entity("Domain.Models.UserModel.UserModel", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
